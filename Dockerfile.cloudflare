# Multi-stage Docker build for Cloudflare Workers deployment
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json package-lock.json ./

# Install dependencies with legacy peer deps for compatibility
RUN npm cache clean --force && \
    npm ci --legacy-peer-deps --no-audit --no-fund

# Copy source code
COPY . .

# Build the React application
RUN npm run build

# Production stage - prepare for Cloudflare deployment
FROM alpine:latest AS deploy

# Install curl for health checks and deployment tools
RUN apk add --no-cache curl

# Copy built files from builder stage
COPY --from=builder /app/build /app/build

# Copy deployment configuration
COPY --from=builder /app/package.json /app/package.json

# Set working directory
WORKDIR /app

# Create deployment info
RUN echo "Build completed at: $(date)" > /app/build/build-info.txt && \
    echo "Docker build: SUCCESS" >> /app/build/build-info.txt

# Expose port (for local testing)
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD echo "Docker build healthy"

# Default command (can be overridden by Cloudflare)
CMD ["echo", "Cloudflare Workers Docker build completed successfully"] 